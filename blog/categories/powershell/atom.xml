<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: powershell | Najam Sikander Awan]]></title>
  <link href="http://blog.najamsikander.com/blog/categories/powershell/atom.xml" rel="self"/>
  <link href="http://blog.najamsikander.com/"/>
  <updated>2015-01-28T16:17:30+05:00</updated>
  <id>http://blog.najamsikander.com/</id>
  <author>
    <name><![CDATA[najam sikander awan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automating Ftp Uploads With Powershell]]></title>
    <link href="http://blog.najamsikander.com/blog/2014/10/01/automating-ftp-uploads-with-powershell/"/>
    <updated>2014-10-01T12:45:00+05:00</updated>
    <id>http://blog.najamsikander.com/blog/2014/10/01/automating-ftp-uploads-with-powershell</id>
    <content type="html"><![CDATA[<p>In my last post I have shared hwo you can <a href="http://blog.najamsikander.com/blog/2014/10/01/archive-folders-with-powershell/">archive a folder via powershell</a> and <a href="https://pscx.codeplex.com/">Pscx</a>. In my normal backup process I am used to upload zip files using ftp client like filezilla but now I am trying powershell to perform this task.</p>

<p>Please feel free to test following code and let me know your thoughts and improvements.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>upload file using ftp&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>function FtpUpload($file, $ftphost, $ftpuser, $ftppass){ &lt;br/>
</span><span class='line'>   $Dir = Split-Path $file -Parent
</span><span class='line'>   $filename = $file.Replace("$Dir\", "")&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>   #ftp server
</span><span class='line'>   $webclient = New-Object System.Net.WebClient
</span><span class='line'>   $webclient.Credentials = New-Object System.Net.NetworkCredential($ftpuser,$ftppass)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>#list every sql server trace file 
</span><span class='line'>foreach($item in (dir $Dir $filename)){ 
</span><span class='line'>    "Uploading $item..." 
</span><span class='line'>    $filepath = $ftphost+$item.Name
</span><span class='line'>    $filepath
</span><span class='line'>    $uri = New-Object System.Uri($filepath)         
</span><span class='line'>    $webclient.UploadFile($uri, $item.FullName) 
</span><span class='line'>} 
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>FtpUpload E:\projects\AspNet\MVC\newFoldernewFolder_2014_29_09.zip ftpHost ftpUser ftpPassword&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I have shared this script on <a href="https://github.com/najamsk/powershellRepo">github</a> adjust it accroding to your needs and share your resutls.</p>

<p>Please feel free to suggest improvements and if you have any questions use comments area.</p>

<p>Thanks for your time.</p>

<p>-Najam</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archive Folders With Powershell]]></title>
    <link href="http://blog.najamsikander.com/blog/2014/10/01/archive-folders-with-powershell/"/>
    <updated>2014-10-01T12:09:00+05:00</updated>
    <id>http://blog.najamsikander.com/blog/2014/10/01/archive-folders-with-powershell</id>
    <content type="html"><![CDATA[<p>When your web application is running on web server and you don't have automatic backup service available form your hosting service provider taking manual backups is really a frustrating job.</p>

<p>I have <a href="https://pscx.codeplex.com/">Pscx</a> module installed on my PC and they have a nice little command Write-Zip available so I decided to write a custom powershell function that can create archive in zip formats for me. You can use windows task scheduler to invoke any powershell script so you can take advantage of this to have automatic daily or monthly backups.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>$target is the folder you want to zip&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>$destinaion is the path where you want to create zip file&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>$outFile is the fileName of the generated zip file&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>function CreateZip($target, $destination, $outFile)
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>todays date&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$date = Get-Date -Format yyyy_dd_MM&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>if output file is not mentioned try to get a file name based on target&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>if ($outFile -eq $null -or $outFile -eq '')
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>#$target = "E:\projects\AspNet\MVC\newFolder"
</span><span class='line'>$a = Split-Path $target -Parent
</span><span class='line'>$outFile = $target.Replace("$a\", "") + "_$date"  + ".zip"    
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>if desitnation is not mentioned create zip file in target folder&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>if($destination -eq $null -or $destination -eq '')
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>$destinationPath = $target + $outFile;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}
</span><span class='line'>else
</span><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>$destinationPath = $destination + $outFile
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Write-Zip $target -IncludeEmptyDirectories -OutputPath $destinationPath
</span><span class='line'>return $destinationPath
</span><span class='line'>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>this command will zip folder at E:\projects\AspNet\MVC\newFolder as myproject.zip at E:\Projects\AspNet\&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>$bakfile = CreateZip E:\projects\AspNet\MVC\newFolder E:\Projects\AspNet\ myproject.zip&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I have shared this script on <a href="https://github.com/najamsk/powershellRepo">github</a> adjust it accroding to your needs and share your resutls.</p>

<p>Please feel free to suggest improvements and if you have any questions use comments area.</p>

<p>Thanks for your time.</p>

<p>-Najam</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending Emails With Powershell]]></title>
    <link href="http://blog.najamsikander.com/blog/2014/10/01/sending-emails-with-powershell/"/>
    <updated>2014-10-01T10:09:00+05:00</updated>
    <id>http://blog.najamsikander.com/blog/2014/10/01/sending-emails-with-powershell</id>
    <content type="html"><![CDATA[<p>I am managing different servers and each of them have different responsibilities.</p>

<p>I am learning powershell and trying to build lego blocks that will eventually become recipes for automating tasks on different servers. One important block is email report for that if you don't have smtp configured on server you can use following powershell script with gmail SMTP information.</p>

<p>I will open source on <a href="https://github.com/najamsk/powershellRepo">github</a> many of the small powershell scripts that you can make use of to build something cool.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$EmailFrom = "from@mail.com"
</span><span class='line'>$EmailTo = "to@mail.com"
</span><span class='line'>$Subject = "emailing powershell report"
</span><span class='line'>$Body = "this should work on remove server as well. test email"
</span><span class='line'>$SMTPServer = "smtp.gmail.com"
</span><span class='line'>$SMTPClient = New-Object Net.Mail.SmtpClient($SmtpServer, 587)
</span><span class='line'>$SMTPClient.EnableSsl = $true
</span><span class='line'>$SMTPClient.Credentials = New-Object System.Net.NetworkCredential("gmailUser", "gmailPasswor");
</span><span class='line'>$SMTPClient.Send($EmailFrom, $EmailTo, $Subject, $Body)</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Hope this will help someone, feel free to improve this script and than share it with me you can file bugs on github.</p>

<p>Thanks for your time.</p>

<p>-Najam</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[empower your outlook with powershell]]></title>
    <link href="http://blog.najamsikander.com/blog/2013/07/07/empower-your-outlook-with-powershell/"/>
    <updated>2013-07-07T19:49:00+05:00</updated>
    <id>http://blog.najamsikander.com/blog/2013/07/07/empower-your-outlook-with-powershell</id>
    <content type="html"><![CDATA[<p>I needed to genrate an email log that contains every email from our clients these normally stored in their seprate folder. One way was to copy and paste email headers and body into a word document. Second was to use powershell and got all the emails using some script.</p>

<p>After playing a little with powershell and google few of its basic I have completed my task with powershell.</p>

<p><div><script src='https://gist.github.com/5944505.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>Above code is used to select a folder under your outlook inbox in my case its jun 2013 which comes under EmailLog which is under my inbox. I have saved the result of this function into a variable. That would be passed into second function for html creation.</p>

<p><div><script src='https://gist.github.com/5944515.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>This function will take email objects and wrap html mark around them before saving them into a html file.</p>
]]></content>
  </entry>
  
</feed>
