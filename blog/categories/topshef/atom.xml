<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: topshef | Najam Sikander Awan]]></title>
  <link href="http://blog.najamsikander.com/blog/categories/topshef/atom.xml" rel="self"/>
  <link href="http://blog.najamsikander.com/"/>
  <updated>2013-10-22T15:45:50+05:00</updated>
  <id>http://blog.najamsikander.com/</id>
  <author>
    <name><![CDATA[najam sikander awan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writing .Net Windows Service Made Easy Using Topshelp]]></title>
    <link href="http://blog.najamsikander.com/blog/2013/04/21/"/>
    <updated>2013-04-21T03:28:00+05:00</updated>
    <id>http://blog.najamsikander.com/blog/2013/04/</id>
    <content type="html"><![CDATA[<p>I have first read about <a href="http://topshelf-project.com/">topshelf</a> <a href="http://gregorsuttie.com/2012/08/20/what-i-learned-last-week-13th-august-17th-august/">Gregor's blog</a> and latter fond scott hanselman recommendation about it.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">TownCrier</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">readonly</span> <span class="n">Timer</span> <span class="n">_timer</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span> <span class="nf">TownCrier</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_timer</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Timer</span><span class="p">(</span><span class="m">1000</span><span class="p">)</span> <span class="p">{</span><span class="n">AutoReset</span> <span class="p">=</span> <span class="k">true</span><span class="p">};</span>
</span><span class='line'>    <span class="n">_timer</span><span class="p">.</span><span class="n">Elapsed</span> <span class="p">+=</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">eventArgs</span><span class="p">)</span> <span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;It is {0} an all is well&quot;</span><span class="p">,</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">Start</span><span class="p">()</span> <span class="p">{</span> <span class="n">_timer</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span> <span class="p">}</span>
</span><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">Stop</span><span class="p">()</span> <span class="p">{</span> <span class="n">_timer</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span> <span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">public</span> <span class="k">class</span> <span class="nc">Program</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">HostFactory</span><span class="p">.</span><span class="n">Run</span><span class="p">(</span><span class="n">x</span> <span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span>                                 <span class="c1">//1</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">x</span><span class="p">.</span><span class="n">Service</span><span class="p">(</span><span class="n">s</span> <span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span>                        <span class="c1">//2</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>           <span class="n">s</span><span class="p">.</span><span class="n">ConstructUsing</span><span class="p">(</span><span class="n">name</span><span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span> <span class="k">new</span> <span class="n">TownCrier</span><span class="p">());</span>     <span class="c1">//3</span>
</span><span class='line'>           <span class="n">s</span><span class="p">.</span><span class="n">WhenStarted</span><span class="p">(</span><span class="n">tc</span> <span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span> <span class="n">tc</span><span class="p">.</span><span class="n">Start</span><span class="p">());</span>              <span class="c1">//4</span>
</span><span class='line'>           <span class="n">s</span><span class="p">.</span><span class="n">WhenStopped</span><span class="p">(</span><span class="n">tc</span> <span class="p">=&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">gt</span><span class="p">;</span> <span class="n">tc</span><span class="p">.</span><span class="n">Stop</span><span class="p">());</span>               <span class="c1">//5</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="n">x</span><span class="p">.</span><span class="n">RunAsLocalSystem</span><span class="p">();</span>                            <span class="c1">//6</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">x</span><span class="p">.</span><span class="n">SetDescription</span><span class="p">(</span><span class="s">&quot;Sample Topshelf Host&quot;</span><span class="p">);</span>        <span class="c1">//7</span>
</span><span class='line'>        <span class="n">x</span><span class="p">.</span><span class="n">SetDisplayName</span><span class="p">(</span><span class="s">&quot;Stuff&quot;</span><span class="p">);</span>                       <span class="c1">//8</span>
</span><span class='line'>        <span class="n">x</span><span class="p">.</span><span class="n">SetServiceName</span><span class="p">(</span><span class="s">&quot;stuff&quot;</span><span class="p">);</span>                       <span class="c1">//9</span>
</span><span class='line'>    <span class="p">});</span>                                                  <span class="c1">//10</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
I have slowly started to play with this tool learning its simple APP, browsing documentation and creating test code. One of my asp.net project has a page which is performing monthly payments using authorize.net and as number of users are increased this page is timing out and asp.net gives us thread aborted exception.</p>

<p>This was perfect timing to use topshelf and migrate payment code into a windows service. So I have started with very basic sample, few timers, stop/start events and while I was into it I have decided to implement Unit Of Work and Repository pattern for data access layer. Will write a short post about how I have used these patterns with asp.net web forms application.</p>

<p>Back to Topshelf service has been written and deployed on live server and its working so far but I need to answer following questions and they will be a learning document for newcomer.</p>

<ul>
    <li><span style="line-height: 21px;">Q. When timer is elpased and if any config file is modified would it read updated settings?</span></li>
    <li>even if service is running if code is reading from config inside timer elapsed event handler it will get fresh values from config</li>
    <li><span style="line-height: 21px;">Q. How to install/uninstall the service?</span></li>
    <li><span style="line-height: 21px;">Q. How to recover if service keeps running even after stop signal or some bug don't let it stop?</span></li>
    <li><span style="line-height: 21px;">Q. How to send cc email using NLOG?</span></li>
    <li><span style="line-height: 21px;">Q. Nlog write to file?</span></li>
    <li><span style="line-height: 21px;">Q. How sential is helping me on live server with logging?</span></li>
    <li><span style="line-height: 21px;">Q. When topshelf code is modified new exe file can be updated after just stopping service or un-install is required?</span></li>
    <li><span style="line-height: 21px;">Q. Used Settings section (type safety) in app.config vs app settings that is basically a key value pair of string types?</span></li>
</ul>


<p>This tools also works great with logging tools, I have tested it against NLog and to view these logs I have used Sential.</p>
]]></content>
  </entry>
  
</feed>
