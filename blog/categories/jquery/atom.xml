<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQuery | Najam Sikander Awan]]></title>
  <link href="http://najamsk.github.io/najamsk/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://najamsk.github.io/najamsk/"/>
  <updated>2013-04-28T11:16:07+05:00</updated>
  <id>http://najamsk.github.io/najamsk/</id>
  <author>
    <name><![CDATA[najam sikander awan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Get Running Jquery Version]]></title>
    <link href="http://najamsk.github.io/najamsk/blog/2010/12/06/get-running-jquery-version/"/>
    <updated>2010-12-06T02:12:00+05:00</updated>
    <id>http://najamsk.github.io/najamsk/blog/2010/12/06/get-running-jquery-version</id>
    <content type="html"><![CDATA[<p>Few weeks back I came across a page that has multiple jquery versions referenced in it and I had no idea which jquery version is actually running. So after little bit of googling I find following solution.</p>

<div>
<pre>//Returns "1.3.1"
$().jquery;

//Returns "1.3.1"
jQuery.fn.jquery;</pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 Things I Learned from the jQuery Source]]></title>
    <link href="http://najamsk.github.io/najamsk/blog/2010/07/23/10-things-i-learned-from-the-jquery-source/"/>
    <updated>2010-07-23T03:22:00+05:00</updated>
    <id>http://najamsk.github.io/najamsk/blog/2010/07/23/10-things-i-learned-from-the-jquery-source</id>
    <content type="html"><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="450" height="275" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://vimeo.com/moogaloop.swf?clip_id=12529436&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" /><embed type="application/x-shockwave-flash" width="450" height="275" src="http://vimeo.com/moogaloop.swf?clip_id=12529436&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>


<p><a href="http://vimeo.com/12529436">Paul Irish : 10 Things I Learned from the jQuery Source</a> from <a href="http://vimeo.com/yayquery">yayQuery</a> on <a href="http://vimeo.com">Vimeo</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Juqery Ani-Patterns for performance &amp; compression by paul irish]]></title>
    <link href="http://najamsk.github.io/najamsk/blog/2010/07/23/juqery-ani-patterns-for-performance-compression-by-paul-irish/"/>
    <updated>2010-07-23T03:20:00+05:00</updated>
    <id>http://najamsk.github.io/najamsk/blog/2010/07/23/juqery-ani-patterns-for-performance-compression-by-paul-irish</id>
    <content type="html"><![CDATA[<div id="__ss_1984008" style="width: 425px;"><strong><a title="jQuery Anti-Patterns for Performance &amp; Compression" href="http://www.slideshare.net/paul.irish/perfcompression">jQuery Anti-Patterns for Performance &amp; Compression</a></strong><object id="__sse1984008" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=perfcompression-090911091939-phpapp01&amp;stripped_title=perfcompression" /><param name="name" value="__sse1984008" /><param name="allowfullscreen" value="true" /><embed id="__sse1984008" type="application/x-shockwave-flash" width="425" height="355" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=perfcompression-090911091939-phpapp01&amp;stripped_title=perfcompression" name="__sse1984008" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="padding: 5px 0 12px;">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/paul.irish">Paul Irish</a>.</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Consuming asp.net webservice with jquery]]></title>
    <link href="http://najamsk.github.io/najamsk/blog/2009/02/03/consuming-aspnet-webservice-with-jquery/"/>
    <updated>2009-02-03T05:22:00+05:00</updated>
    <id>http://najamsk.github.io/najamsk/blog/2009/02/03/consuming-aspnet-webservice-with-jquery</id>
    <content type="html"><![CDATA[<p>hi guys,</p>

<p>Well I like to share one more experiment with you that is how to call a webservice from your javascript(jquery). For that again you need to have an asp.net ajax enable website.</p>

<p>Lets first examine what are the requiments for webservice if we need to call it from javascript well after having asp.net ajax enable website first is you should mark your serverice as [ScriptService] what it does it will make all the methods/functions of your webservice to be accessable from javascript code and it also serialise your webservice response using JASON .</p>

<p>By default asp.net web services use soap for communication scriptservice marker make your webservice to use JASON.</p>

<p>Now lets defien the method in our webservice which we want to be accessable by our javascript code.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[WebMethod]</span>
</span><span class='line'><span class="k">public</span> <span class="kt">int</span> <span class="nf">AddingNumbers</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="n">a</span> <span class="p">+</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>That's it now lets move to client side code.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="err">$</span><span class="p">(</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'><span class="err">$</span><span class="p">.</span><span class="n">ajax</span><span class="p">({&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">type</span><span class="p">:</span> <span class="s">&quot;POST&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">url</span><span class="p">:</span> <span class="s">&quot;WebServices/MyWS.asmx/AddingNumbers&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">data</span><span class="p">:</span> <span class="s">&quot;{&#39;a&#39;:&#39;1&#39;,&#39;b&#39;:&#39;2&#39;}&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">contentType</span><span class="p">:</span> <span class="s">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">dataType</span><span class="p">:</span> <span class="s">&quot;json&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">success</span><span class="p">:</span> <span class="n">function</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something interesting here.</span>
</span><span class='line'><span class="n">alert</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="n">error</span><span class="p">:</span> <span class="n">function</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">alert</span><span class="p">(</span><span class="s">&quot;Request can&#39;t made using ajax&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">});</span><span class="c1">//ajax ends here</span>
</span><span class='line'><span class="p">});</span><span class="c1">// document ready ends here</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In above javasrcipt code we are making an ajax post request we set  contentType to "application/json; charset=utf-8" and  dataType to "json" and passing a=1,b=2 as are data input parameters note that varriables name are same as verriables declared in webservice's function <strong>AddingNumbers </strong>input parameters.</p>

<p>Please read articles from following links to know more and have a strong background.</p>

<p>http://encosia.com/2008/03/27/using-jquery-to-consume-aspnet-json-web-services/</p>

<p>http://encosia.com/2008/06/05/3-mistakes-to-avoid-when-using-jquery-with-aspnet-ajax/</p>

<p>http://www.keithrousseau.com/blog/2008/05/using-jquery-json-with-aspnet/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calling asp.net page methods with jquery]]></title>
    <link href="http://najamsk.github.io/najamsk/blog/2009/02/03/calling-aspnet-page-methods-with-jquery/"/>
    <updated>2009-02-03T04:23:00+05:00</updated>
    <id>http://najamsk.github.io/najamsk/blog/2009/02/03/calling-aspnet-page-methods-with-jquery</id>
    <content type="html"><![CDATA[<p>Hi guyz,</p>

<p>Today I am sharing how to call asp.net web page code behind methods from client side javascript in my case it will be jquery.</p>

<p>Let us divide this into two parts the server side and client side on server side we have to write a function or page method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="na">[WebMethod]</span>
</span><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">AddStrings</span><span class="p">(</span><span class="kt">string</span> <span class="n">a</span><span class="p">,</span> <span class="kt">string</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;my friend answer is {0}&quot;</span><span class="p">,</span> <span class="n">a</span> <span class="p">+</span> <span class="n">b</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Note that we mark  our AddStrings function as WebMethod and its public and static this is the basic requirement for the funtion if you want to call it from javascript or jquery.</p>

<p>Function itlsef is pretty simple all it does takes two strings join them and return the result.  Thats all we need to write for server side.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;POST&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">url</span><span class="o">:</span> <span class="s2">&quot;Default.aspx/AddStrings&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">data</span><span class="o">:</span> <span class="s2">&quot;{a:&#39;najam &#39;,b:&#39;sikander&#39;}&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">contentType</span><span class="o">:</span> <span class="s2">&quot;application/json; charset=utf-8&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">dataType</span><span class="o">:</span> <span class="s2">&quot;json&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="c1">// Do something interesting here.</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="nx">error</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Request can&#39;t made using ajax&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">});</span><span class="c1">//ajax ends here</span>
</span><span class='line'><span class="p">});</span><span class="c1">// document ready ends here</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Client side has its own requirements first its better to use post request if you want any result back from server and then you should use json as communication medium and for that we need to set content type and data type as</p>

<p>contentType: "application/json; charset=utf-8",  dataType: "json" and we should supply the input  data with our request. Please note that if your server side function expecting two parameters named "a" and "b" you should name your javascript input parameters same as server side parameters thats why in data section we have same name of the varriables. Example data: "{a:'najam ',b:'sikander'}",</p>

<p>Last requirement is your web.config should have entries for asp.net ajax sections. If you are building from scrath you can shoose asp.net ajax website as template when starting new website.</p>

<p>Please read articles from following links to know more and have a strong background.</p>

<p>http://encosia.com/2008/03/27/using-jquery-to-consume-aspnet-json-web-services/</p>

<p>http://encosia.com/2008/06/05/3-mistakes-to-avoid-when-using-jquery-with-aspnet-ajax/</p>

<p>http://www.keithrousseau.com/blog/2008/05/using-jquery-json-with-aspnet/</p>
]]></content>
  </entry>
  
</feed>
